{"version":3,"sources":["components/login/login.js","utills/sortTable.js","components/accounts/accounts.js","data/jsonData.js","components/transactions/transactions.js","components/home/home.js","App.js","reportWebVitals.js","index.js"],"names":["Login","onSumit","useState","user","setUser","pass","setPass","className","type","name","placeholder","value","onChange","e","target","onClick","useSortTable","list","defaultKey","defaulOrder","sortedList","setSortedList","sorKey","setSortKey","sorOrder","setSortOrder","useEffect","sort","a","b","key","order","Accounts","accounts","setSelectedAcc","accList","setAccList","sortByCoulmn","keys","console","log","map","acc","accNo","accName","accType","balance","currency","id","accountsData","transactionData","transactions","date","amount","Transactions","props","temp","filter","trns","setList","transaction","Home","accountList","isTransactios","SetIsTransactios","selectedAcc","SetSelectedAcc","showTransactios","account","App","isLoggedin","setIsLoggedin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19afb227.chunk.js","sourcesContent":["import { useState } from 'react'\n\nconst Login = ({ onSumit }) => {\n   const [user, setUser] = useState('')\n   const [pass, setPass] = useState('')\n\n   const onLogin = () => {\n      onSumit({ user, pass })\n      setUser('')\n      setPass('')\n   }\n\n   return (\n      <div data-testid='login-1' className='container'>\n         <form>\n            <h3 className='center-align'>Login</h3>\n            <input\n               className='input'\n               type='text'\n               data-testid='login-username'\n               name='userName'\n               placeholder='Username'\n               value={user}\n               onChange={(e) => setUser(e.target.value)}\n            ></input>\n            <input\n               className='input'\n               type='password'\n               data-testid='login-password'\n               name='password'\n               placeholder='Password'\n               value={pass}\n               onChange={(e) => setPass(e.target.value)}\n            ></input>\n            <button data-testid='login-button' className='input btn-login' onClick={onLogin}>\n               Login\n            </button>\n         </form>\n      </div>\n   )\n}\n\nexport default Login\n","import {useState, useEffect} from 'react'\n\nexport default function useSortTable(list, defaultKey, defaulOrder) {\n    const [sortedList, setSortedList] = useState(list);\n    const [sorKey, setSortKey] = useState(defaultKey);\n    const [sorOrder, setSortOrder] = useState(defaulOrder);\n\n    const sortByCoulmn = (list, key, order) => {\n        setSortedList(list);\n        setSortKey(key);\n        setSortOrder(order);\n    }\n\n    useEffect(() => {\n        if (sorOrder === 'asc') {\n            sortedList.sort((a,b) => (a[sorKey]> b[sorKey]) ? 1 : ((b[sorKey] > a[sorKey] ? -1 : 0)));\n            setSortedList(sortedList);\n        }\n        else {\n            sortedList.sort((a,b) => (a[sorKey] < b[sorKey]) ? 1 : ((b[sorKey] < a[sorKey] ? -1 : 0)));\n            setSortedList(sortedList);\n        }\n        \n    },[sorKey, sorOrder, sortedList]);\n\n    return [sortedList, sortByCoulmn];\n}","import { useState, useEffect } from 'react'\nimport useSortTable from '../../utills/sortTable'\n\nconst Accounts = ({ accounts, setSelectedAcc }) => {\n   const defaultKey = 'accNo';\n   const defaulOrder = 'asc';\n\n   const [order] = useState(defaulOrder);\n   const [accList, setAccList] = useState([]);\n\n   const [sortedList, sortByCoulmn] = useSortTable(accounts, defaultKey, defaulOrder);\n   \n   const sort = (keys) => {\n      sortByCoulmn([...accounts], keys, order);\n   }\n\n   useEffect(() => {\n      setAccList(sortedList);\n      console.log('sortedlist: ', sortedList);\n   },[sortedList]);\n\n   const showTransactios = (account) => {\n      setSelectedAcc(account)\n   }\n\n   return (\n      <div data-testid='accounts-table' className=''>\n         <table className='row table'>\n            <thead>\n               <tr>\n                  <td onClick={()=>sort('accNo')}>Account Number</td>\n                  <td onClick={()=>sort('accName')}>Account Name</td>\n                  <td onClick={()=>sort('accType')}>Type</td>\n                  <td onClick={()=>sort('balance')}>Balance</td>\n                  <td onClick={()=>sort('currency')}>Currency</td>\n               </tr>\n            </thead>\n            <tbody>\n               {accList && accList.map((acc) => (\n                  <tr key={acc.id} onClick={() => showTransactios(acc)}>\n                     <td>{acc.accNo}</td>\n                     <td>{acc.accName}</td>\n                     <td>{acc.accType}</td>\n                     <td>{acc.balance}</td>\n                     <td>{acc.currency}</td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n      </div>\n   )\n}\n\nexport default Accounts\n","export const accountsData = {\n    accounts : [{\n        id: 1,\n        accNo: '002',\n        accName: 'Saving Account',\n        accType: 'Saving',\n        balance: 1132,\n        currency: 'AUD'\n      },\n      {\n        id: 2,\n        accNo: '003',\n        accName: 'Bonus Saving Account',\n        accType: 'Saving',\n        balance: 432,\n        currency: 'GBP'\n      },\n      {\n        id: 3,\n        accNo: '001',\n        accName: 'Current Account',\n        accType: 'Current',\n        balance: 1232,\n        currency: 'AUD'\n      }\n    ]\n}\n\nexport const transactionData = {\n    transactions : [{\n        id: 1,\n        accNo: '001',\n        accName: 'Saving Account',\n        date: '2021-10-10',\n        amount: 1300\n      },\n      {\n        id: 2,\n        accNo: '001',\n        accName: 'Current Account',\n        date: '2021-11-01',\n        amount: 1100\n      },\n      {\n        id: 7,\n        accNo: '001',\n        accName: 'Saving Account',\n        date: '2021-06-01',\n        amount: 2100\n      },\n      {\n        id: 4,\n        accNo: '002',\n        accName: 'Bonus Saving Account',\n        date: '2021-07-12',\n        amount: 2200\n      },\n      {\n        id: 3,\n        accNo: '002',\n        accName: 'Bonus Saving Account',\n        date: '2021-10-11',\n        amount: 2500\n      },\n      {\n        id: 6,\n        accNo: '002',\n        accName: 'Saving Account',\n        date: '2021-09-11',\n        amount: 200\n      },\n      {\n        id: 5,\n        accNo: '003',\n        accName: 'Current Account',\n        date: '2021-11-02',\n        amount: 1000\n      },\n    ]\n}","import { useState, useEffect } from 'react'\nimport { transactionData } from '../../data/jsonData.js'\nimport useSortTable from '../../utills/sortTable'\n\nconst Transactions = (props) => {\n\n   const temp = transactionData.transactions.filter((trns) => trns.accNo === props.acc.accNo);\n   const defaultKey = 'id';\n   const defaulOrder = 'asc';\n\n   const [order] = useState(defaulOrder);\n   const [list, setList] = useState([]);\n   const [sortedList, sortByCoulmn] = useSortTable(list, defaultKey, defaulOrder);\n   \n   const sort = (keys) => {\n      sortByCoulmn([...list], keys, order);\n   }\n\n   useEffect(() => {\n      setList(sortedList);\n      console.log('sortedlist: ', sortedList);\n   },[sortedList]);\n\n   useEffect(() => {\n      setList(temp);\n   }, [])\n\n   return (\n      <div data-testid='transaction-table' className=''>\n         <table className='row table'>\n            <thead>\n               <tr>\n                  <td onClick={()=>sort('id')}>Transaction Id</td>\n                  <td onClick={()=>sort('accNo')}>Account Id</td>\n                  <td onClick={()=>sort('accName')}>From Account</td>\n                  <td onClick={()=>sort('date')}>Transaction Data</td>\n                  <td onClick={()=>sort('amount')}>Amount</td>\n               </tr>\n            </thead>\n            <tbody>\n               {list && list.map((transaction) => (\n                  <tr key={transaction.id}>\n                     <td>{transaction.id}</td>\n                     <td>{transaction.accNo}</td>\n                     <td>{transaction.accName}</td>\n                     <td>{transaction.date}</td>\n                     <td>{transaction.amount}</td>\n                  </tr>\n               ))}\n            </tbody>\n         </table>\n      </div>\n   )\n}\n\nexport default Transactions\n","import { useState } from 'react'\nimport Accounts from '../accounts/accounts.js'\nimport Transactions from '../transactions/transactions'\nimport { accountsData } from '../../data/jsonData.js'\n\nconst Home = () => {\n   const [accountList] = useState(accountsData.accounts)\n   const [isTransactios, SetIsTransactios] = useState(false)\n   const [selectedAcc, SetSelectedAcc] = useState({})\n\n   const setSelectedAcc = (acc) => {\n      showTransactios(acc)\n   }\n   const showTransactios = (account) => {\n      SetSelectedAcc(account)\n      SetIsTransactios(true)\n   }\n\n   const backToAccountList = () => {\n      SetSelectedAcc({})\n      SetIsTransactios(false)\n   }\n\n   return (\n      <div className='container'>\n         <header data-testid='Header-1' className='row header'>\n            <h2>Simple Banking App</h2>\n         </header>\n         <div data-testid='breadcrumb-1' className='row bredcrumb'>\n            {!isTransactios ? (\n               <h3 data-testid='account-heading'>Account List</h3>\n            ) : (\n               <h3 data-testid='Transaction-heading'>\n                  <span className='bredcrumb_link' onClick={backToAccountList}>\n                     {selectedAcc.accName}\n                  </span>{' '}\n                  - Transactions List\n               </h3>\n            )}\n         </div>\n         {!isTransactios ? (\n            <Accounts\n               data-testid='accounts-list'\n               accounts={accountList}\n               setSelectedAcc={setSelectedAcc}\n            ></Accounts>\n         ) : (\n            <Transactions data-testid='transaction-list' acc={selectedAcc}></Transactions>\n         )}\n      </div>\n   )\n}\n\nexport default Home\n","import { useState } from \"react\";\nimport Login from \"./components/login/login.js\";\n\nimport Home from \"./components/home/home.js\";\nimport './App.css';\n\nfunction App() {\n  \n  const [isLoggedin, setIsLoggedin] = useState(false)\n  const onLogin = ({user, pass}) => {\n    if(user && user !== \"\" && pass && pass !== \"\") {\n      setIsLoggedin(true)\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      {\n        !isLoggedin \n        ? <Login onSumit={onLogin} />\n        : <Home></Home>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}